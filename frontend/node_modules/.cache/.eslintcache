[{"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js":"1","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js":"2","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js":"3","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js":"4"},{"size":251,"mtime":1647495590168,"results":"5","hashOfConfig":"6"},{"size":459,"mtime":1647677582892,"results":"7","hashOfConfig":"6"},{"size":1583,"mtime":1647850643214,"results":"8","hashOfConfig":"6"},{"size":5557,"mtime":1647836543912,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vy6rpv",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js",["23"],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js",["24"],[],"import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./ChatInterface.css\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatInterface = () => {\n  window.setTimeout(function () {\n    let element = document.getElementById(\"chatBox\");\n    element.scrollTop = element.scrollHeight;\n  });\n\n  const topicChange = (id) => {\n    let topicBox = document.getElementById(id);\n    setTopic(topicBox.id);\n  };\n\n  const [topic, setTopic] = useState(\"General\");\n\n  const [messages, setMessages] = useState([\n    {\n      text: \"Some say that our lives are defined by the sum of our choices.\\\n    But it isnâ€™t really our choices that distinguish who we are. \\\n    Itâ€™s our commitment to them.\",\n      user: { id: \"2\", name: \"Emily Thorne\" },\n    },\n    {\n      text: \"Wow...that's a little deep for an early morning, is it not? ðŸ˜…\",\n      user: { id: \"1\", name: \"You\" },\n    },\n    {\n      text: \"@Emily - Babe, calm down! ðŸ˜©\",\n      user: { id: \"3\", name: \"Jack Porter\" },\n    },\n    {\n      text: \"Confucius once said, 'Before you embark on a journey of revenge, dig two graves\",\n      user: { id: \"2\", name: \"Emily Thorne\" },\n    },\n    {\n      text: \"Your blood sugar sounds low, let's get breakfast at the Stowaway!\",\n      user: { id: \"1\", name: \"You\" },\n    },\n    {\n      text: \"@Emily - We agreed, no revenge before breakfast!\",\n      user: { id: \"3\", name: \"Jack Porter\" },\n    },\n  ]);\n\n  const send = () => {\n    let message = document.getElementById(\"messageBox\");\n    const newMessage = { text: message.value, user: { id: \"1\", name: \"You\" } };\n    setMessages([...messages, newMessage]);\n    message.value = \"\";\n  };\n\n  function displayTime() {\n    const date = new Date();\n    const hours = date.getHours().toString().padStart(2, 0);\n    const newHour = (hours % 12 || 12).toString();\n    const minutes = date.getMinutes().toString().padStart(2, 0);\n\n    const amPM = hours < \"12\" || hours === \"24\" ? \"AM\" : \"PM\";\n\n    return `${newHour}:${minutes} ${amPM}`;\n  }\n\n  let theTime = displayTime();\n\n  const theMessages =\n    messages &&\n    messages.map((message, index) => {\n      return (\n        <div\n          className=\"chat-container\"\n          style={\n            message.user.name === \"You\"\n              ? { background: \"#e45437\" }\n              : { background: \"\" }\n          }\n          key={index}\n        >\n          <div\n            className=\"card-header d-flex justify-content-between p-3\"\n            style={{ borderBottom: \"1px solid rgba(255, 255, 255, 0.3\" }}\n          >\n            <p className=\"fw-bold mb-0\">{message?.user.name}</p>\n            <p className=\" small mb-0\">\n              <i>{theTime}</i>\n            </p>\n          </div>\n          <div className=\"card-body\">\n            <p className=\"mb-0 mx-auto p-2\">{message.text}</p>\n          </div>\n        </div>\n      );\n    });\n\n  return (\n    <>\n      <div id=\"container\">\n        <div className=\"text-center mx-auto\" id=\"navbar\">\n          {topic}\n        </div>\n\n        <div className=\"userBox col-3 userText\">\n          <h6 className=\"text-center p-3 mt-2 pb-1\">Active Users</h6>\n          <p className=\"text-center\">User</p>\n          <h6 className=\"text-center p-3\">Topics</h6>\n          <Button\n            className=\"p-2 d-flex justify-content-center align-items-center mx-auto mb-4\"\n            autoFocus=\"True\"\n            id=\"General\"\n            onClick={(e) => {\n              topicChange(e.target.id);\n            }}\n          >\n            General\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Art\"\n            onClick={(e) => {\n              topicChange(e.target.id);\n            }}\n          >\n            Art\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Film & TV\"\n            onClick={(e) => {\n              topicChange(e.target.id);\n            }}\n          >\n            Film & TV\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Music\"\n            onClick={(e) => {\n              topicChange(e.target.id);\n            }}\n          >\n            Music\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-5\"\n            id=\"Sports\"\n            onClick={(e) => {\n              topicChange(e.target.id);\n            }}\n          >\n            Sports\n          </Button>\n\n          <Button\n            className=\"p-3 d-flex text-center mx-auto logoutBtn\"\n            as={Link}\n            to=\"/\"\n          >\n            Logout\n          </Button>\n        </div>\n\n        <div className=\"parent\">\n          <div className=\"discussionBox\" id=\"chatBox\">\n            {theMessages}\n          </div>\n\n          <div className=\"flex child\">\n            <div>\n              <div className=\"input-group\">\n                <textarea\n                  id=\"messageBox\"\n                  type=\"text\"\n                  className=\"form-control messageBox\"\n                  rows=\"2\"\n                  cols=\"500\"\n                  placeholder=\"Type Your Message\"\n                  onKeyUp={(e) => {\n                    if (e.key === \"Enter\") {\n                      send();\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            <Button type=\"submit\" className=\"btn sendBtn\" onClick={send}>\n              SEND\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatInterface;\n",{"ruleId":"25","severity":1,"message":"26","line":22,"column":70,"nodeType":"27","endLine":22,"endColumn":82},{"ruleId":"28","severity":1,"message":"29","line":21,"column":13,"nodeType":"30","messageId":"31","endLine":23,"endColumn":34},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString"]