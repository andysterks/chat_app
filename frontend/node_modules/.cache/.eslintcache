[{"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js":"1","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js":"2","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js":"3","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js":"4","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useToken.js":"5","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/RegisterForm.js":"6"},{"size":251,"mtime":1647495590168,"results":"7","hashOfConfig":"8"},{"size":1068,"mtime":1648627245818,"results":"9","hashOfConfig":"8"},{"size":3637,"mtime":1648627953854,"results":"10","hashOfConfig":"8"},{"size":5491,"mtime":1648627200273,"results":"11","hashOfConfig":"8"},{"size":523,"mtime":1648453452025,"results":"12","hashOfConfig":"8"},{"size":4423,"mtime":1648627188732,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"vy6rpv",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js",[],[],["37","38"],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js",["39"],[],"import \"./App.css\";\nimport ChatInterface from \"./Components/ChatInterface\";\nimport SignInForm from \"./Components/SignInForm\";\nimport RegisterForm from \"./Components/RegisterForm\";\nimport useToken from \"./Components/useToken\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  return (\n    <div>\n      <Router>\n        <Routes>\n          {!token && token !== \"\" && token !== undefined ? (\n            <>\n              <Route path=\"/\" element={<SignInForm />} />\n              <Route path=\"/register\" element={<RegisterForm />} />\n              <Route path=\"/chat\" element={<SignInForm />} />\n            </>\n          ) : (\n            <>\n\n              <Route\n                path=\"/chat\"\n                setToken={setToken}\n                element={<ChatInterface />}\n              />\n              <Route path=\"/\" element={<SignInForm />} />\n            </>\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js",["40"],[],"import React from \"react\";\nimport \"./SignInForm.css\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport chatIcon from \"../img/chat-app-icon.png\";\nimport userIcon from \"../img/userIcon.png\";\nimport pwdIcon from \"../img/passwordIcon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SignInForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [wrongDetails, setWrongDetails] = useState(false);\n\n  let navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const handleClick = () => {\n    const data = {\n      username: username,\n      password: password,\n    };\n\n    axios\n      .post(\"/api/token\", data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        return res;\n      })\n      .then((res) => {\n        localStorage.setItem(\"token\", res.data.access_token);\n        navigate(\"/chat\");\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(\"There was an error!\", error);\n        setWrongDetails(true);\n        console.log(wrongDetails);\n      });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"text-center pa-3\">\n        <img src={chatIcon} className=\"chatIcon\" alt=\"chat-icon\"></img>\n      </div>\n      <div className=\"text-center mt4 name\">Sign in to ChatSpace</div>\n      {wrongDetails ? (\n        <p className=\"text-center mt-4 wrongDetails\">\n          Please enter a valid username and/or password\n        </p>\n      ) : (\n        \"\"\n      )}\n      <form className=\"p-3 mt-3 text-center\">\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <img className=\"userIcon\" alt=\"userIcon\" src={userIcon} />{\" \"}\n          </span>{\" \"}\n          <input\n            type=\"text\"\n            name=\"userName\"\n            id=\"userName\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          ></input>\n        </div>\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            <img className=\"pwdIcon\" alt=\"pwdIcon\" src={pwdIcon} />\n          </span>{\" \"}\n          <input\n            type={passwordShown ? \"text\" : \"password\"}\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyUp={(e) => {\n              if (e.key == \"Enter\") {\n                handleClick();\n              }\n            }}\n            value={password}\n          ></input>\n          <span className=\"passwordEyeIcon\">\n            <FontAwesomeIcon\n              icon={passwordShown ? faEye : faEyeSlash}\n              onClick={togglePasswordVisibility}\n            />\n          </span>\n        </div>\n        <Button className=\"btn mt-3 p-2 loginBtn\" onClick={handleClick}>\n          Login\n        </Button>\n      </form>\n\n      <div className=\"text-center fs-6 p-3\">\n        {\" \"}\n        Not a member? <a href=\"/register\">Sign Up</a>\n      </div>\n      {/* <div className=\"text-center p-2\" style={{fontSize: \"13px\"}}> <a href=\"#\">Forgot Password</a></div> */}\n    </div>\n  );\n};\n\nexport default SignInForm;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js",["41"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./ChatInterface.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useToken from \"./useToken\";\n\nconst ChatInterface = () => {\n  window.setTimeout(function () {\n    let element = document.getElementById(\"chatBox\");\n    element.scrollTop = element.scrollHeight;\n  });\n\n  const [topic, setTopic] = useState(\"General\");\n\n  const [messages, setMessages] = useState([]);\n\n  const [users, setUsers] = useState([]);\n\n  const {removeToken} = useToken();\n\n  let navigate = useNavigate()\n  \n\n  const getUserInfo = (user_id) => {\n    return users.find((user) => user.id === user_id )\n  };\n\n  async function getMessages() {\n    await axios.get(`api/messages/${topic}`).then((res) => {\n      setMessages(res.data);\n      // console.log(res.data);\n     \n    });\n  }\n  async function getUsers() {\n    await axios.get(\"api/users\").then((res) => {\n      setUsers(res.data);\n      // console.log(res.data);\n    });\n  }\n\n\nconst logOut = () => {\n\n  axios\n  .post(\"/api/logout\", data, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n  .then(( res ) => {\n    removeToken()\n    navigate(\"/\")\n    window.location.reload()\n    \n  })\n  .catch((error) => {\n    console.log(\"An error was caught!\", error);\n  });\n}\n\n  \n\n\n  const data = messages.map((message) => {\n    return {\n      ...message,\n      user: getUserInfo(message.userid),\n    };\n  });\n\n \n\n  const send = () => {\n    let message = document.getElementById(\"messageBox\");\n    const newMessage = { text: message.value, user: { id: \"1\", name: \"CrystalW\" } };\n    setMessages([...data, newMessage]);\n    message.value = \"\";\n  };\n\n  \n\n  useEffect(() => {\n    getMessages();\n    getUsers();\n  },[topic]);\n\n  const theMessages =\n    data &&\n    data.map((message, index) => {\n      return (\n        <div\n          className=\"chat-container\"\n          style={\n            message.user?.username === \"CrystalW\"\n              ? { background: \"#e45437\" }\n              : { background: \"\" }\n          }\n          key={index}\n        >\n          <div\n            className=\"card-header d-flex justify-content-between p-3\"\n            style={{ borderBottom: \"1px solid rgba(255, 255, 255, 0.3\" }}\n          >\n            <p className=\"fw-bold mb-0\">{message?.user?.username}</p>\n            <p className=\" small mb-0\">\n              <i>{message?.to_char}</i>\n            </p>\n          </div>\n          <div className=\"card-body\">\n            <p className=\"mb-0 mx-auto p-2\">{message.text}</p>\n          </div>\n        </div>\n      );\n    });\n\n  return (\n    <>\n      <div id=\"container\">\n        <div className=\"text-center mx-auto\" id=\"navbar\">\n          {topic}\n        </div>\n\n        <div className=\"userBox col-3 userText\">\n          <h6 className=\"text-center p-3 mt-2 pb-1\">Active Users</h6>\n          <p className=\"text-center\">User</p>\n          <h6 className=\"text-center p-3\">Topics</h6>\n          <Button\n            className=\"p-2 d-flex justify-content-center align-items-center mx-auto mb-4\"\n            autoFocus=\"True\"\n            id=\"General\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n              \n             \n            }}\n          >\n            General\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Art\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n             \n            }}\n          >\n            Art\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Film & TV\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n              \n              \n            }}\n          >\n            Film & TV\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Music\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n           \n              \n            }}\n          >\n            Music\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-5\"\n            id=\"Sports\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n              \n            }}\n          >\n            Sports\n          </Button>\n\n          <Button\n            className=\"p-3 d-flex text-center mx-auto logoutBtn\"\n            onClick={logOut}\n          >\n            Logout\n          </Button>\n        </div>\n\n        <div className=\"parent\">\n          <div className=\"discussionBox\" id=\"chatBox\">\n            <p className=\"pt-5\">The Date</p>\n            {theMessages}\n          </div>\n\n          <div className=\"flex child\">\n            <div>\n              <div className=\"input-group\">\n                <textarea\n                  id=\"messageBox\"\n                  type=\"text\"\n                  className=\"form-control messageBox\"\n                  rows=\"2\"\n                  cols=\"500\"\n                  placeholder=\"Type Your Message\"\n                  onKeyUp={(e) => {\n                    if (e.key === \"Enter\") {\n                      send();\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            <Button type=\"submit\" className=\"btn sendBtn\" onClick={send}>\n              SEND\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatInterface;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useToken.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/RegisterForm.js",["42"],[],"import React from \"react\";\nimport \"./SignInForm.css\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport chatIcon from \"../img/chat-app-icon.png\";\nimport userIcon from \"../img/userIcon.png\";\nimport pwdIcon from \"../img/passwordIcon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst RegisterForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fullPassword, setFullPassword] = useState(true);\n  const [wrongDetails, setWrongDetails] = useState(false);\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  let navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const pushToken = (data) => {\n    axios\n      .post(\"/api/token\", data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        return res;\n      })\n      .then((res) => {\n        localStorage.setItem(\"token\", res.data.access_token);\n        navigate(\"/chat\");\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(\"There was an error!\", error);\n      });\n  };\n\n  const handleClick = () => {\n    const data = {\n      username: username,\n      password: password,\n    };\n\n    if (username.length >= 4 && password.length >= 4) {\n      axios\n        .post(\"/api/users\", data, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          return res;\n        })\n        .then((res) => {\n          pushToken(data);\n          navigate(\"/chat\");\n          window.location.reload();\n        })\n        .catch((error) => {\n          console.log(\"There was an error!\", error);\n          setWrongDetails(true);\n        });\n    } else {\n      setFullPassword(false);\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"text-center pa-3\">\n        <img src={chatIcon} className=\"chatIcon\" alt=\"chat-icon\"></img>\n      </div>\n      <div className=\"text-center mt4 name\">Sign Up for ChatSpace</div>\n      {!fullPassword ? (\n        <p className=\"text-center mt-4 wrongDetails\">\n          Username and/or password must be at least 4 characters\n        </p>\n      ) : (\n        \"\"\n      )}\n      {wrongDetails ? (\n        <p className=\"text-center mt-4 wrongDetails\">\n          Username is already taken. Please choose another.\n        </p>\n      ) : (\n        \"\"\n      )}\n      <form className=\"p-3 mt-3 text-center\">\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <img className=\"userIcon\" alt=\"userIcon\" src={userIcon} />{\" \"}\n          </span>{\" \"}\n          <input\n            type=\"text\"\n            name=\"userName\"\n            id=\"userName\"\n            placeholder=\"Username\"\n            minlength=\"4\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          ></input>\n        </div>\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            <img className=\"pwdIcon\" alt=\"pwdIcon\" src={pwdIcon} />\n          </span>{\" \"}\n          <input\n            type={passwordShown ? \"text\" : \"password\"}\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            minlength=\"4\"\n            maxLength=\"15\"\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyUp={(e) => {\n              if (e.key == \"Enter\") {\n                handleClick();\n              }\n            }}\n            value={password}\n          ></input>\n          <span className=\"passwordIcon\">\n            <FontAwesomeIcon\n              icon={passwordShown ? faEye : faEyeSlash}\n              onClick={togglePasswordVisibility}\n            />\n          </span>\n        </div>\n        <Button className=\"btn mt-3 p-2 loginBtn\" onClick={handleClick}>\n          Register\n        </Button>\n      </form>\n\n      <div className=\"text-center fs-6 p-3\">\n        {\" \"}\n        Already a member? <a href=\"/\">Log In</a>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":10,"nodeType":"49","messageId":"50","endLine":7,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":94,"column":25,"nodeType":"53","messageId":"54","endLine":94,"endColumn":27},{"ruleId":"55","severity":1,"message":"56","line":88,"column":5,"nodeType":"57","endLine":88,"endColumn":12,"suggestions":"58"},{"ruleId":"51","severity":1,"message":"52","line":129,"column":25,"nodeType":"53","messageId":"54","endLine":129,"endColumn":27},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [getMessages, topic]",{"range":"64","text":"65"},[1817,1824],"[getMessages, topic]"]