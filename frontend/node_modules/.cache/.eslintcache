[{"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js":"1","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js":"2","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js":"3","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js":"4","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useToken.js":"5","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/RegisterForm.js":"6","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useUser.js":"7"},{"size":251,"mtime":1647495590168,"results":"8","hashOfConfig":"9"},{"size":1182,"mtime":1648808977604,"results":"10","hashOfConfig":"9"},{"size":3677,"mtime":1648808896816,"results":"11","hashOfConfig":"9"},{"size":6357,"mtime":1648809575954,"results":"12","hashOfConfig":"9"},{"size":523,"mtime":1648808918576,"results":"13","hashOfConfig":"9"},{"size":4427,"mtime":1648809831784,"results":"14","hashOfConfig":"9"},{"size":548,"mtime":1648808912122,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"vy6rpv",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js",[],[],["41","42"],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js",["43"],[],"import \"./App.css\";\nimport ChatInterface from \"./Components/ChatInterface\";\nimport SignInForm from \"./Components/SignInForm\";\nimport RegisterForm from \"./Components/RegisterForm\";\nimport useToken from \"./Components/useToken\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport useUser from \"./Components/useUser\";\n\nfunction App() {\n  const { token, setToken } = useToken();\n  const { signedInUser, setSignedInUser } = useUser();\n\n  return (\n    <div>\n      <Router>\n        <Routes>\n          {!token && token !== \"\" && token !== undefined ? (\n            <>\n              <Route path=\"/\" element={<SignInForm />} />\n              <Route path=\"/register\" element={<RegisterForm />} />\n              <Route path=\"/chat\" element={<SignInForm />} />\n            </>\n          ) : (\n            <>\n              <Route\n                path=\"/chat\"\n                setToken={setToken}\n                setSignedInUser={setSignedInUser}\n                element={<ChatInterface />}\n              />\n              <Route path=\"/\" element={<SignInForm />} />\n            </>\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js",["44","45","46"],[],"import React, { useContext } from \"react\";\nimport \"./SignInForm.css\";\nimport { Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport chatIcon from \"../img/chat-app-icon.png\";\nimport userIcon from \"../img/userIcon.png\";\nimport pwdIcon from \"../img/passwordIcon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SignInForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [wrongDetails, setWrongDetails] = useState(false);\n\n  let navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const handleClick = () => {\n    const data = {\n      username: username,\n      password: password,\n    };\n\n    axios\n      .post(\"/api/token\", data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        return res;\n      })\n      .then((res) => {\n        localStorage.setItem(\"token\", res.data.access_token);\n        localStorage.setItem(\"user\", username);\n        navigate(\"/chat\");\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(\"There was an error!\", error);\n        setWrongDetails(true);\n      });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"text-center pa-3\">\n        <img src={chatIcon} className=\"chatIcon\" alt=\"chat-icon\"></img>\n      </div>\n      <div className=\"text-center mt4 name\">Sign in to ChatSpace</div>\n      {wrongDetails ? (\n        <p className=\"text-center mt-4 wrongDetails\">\n          Please enter a valid username and/or password\n        </p>\n      ) : (\n        \"\"\n      )}\n      <form className=\"p-3 mt-3 text-center\">\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <img className=\"userIcon\" alt=\"userIcon\" src={userIcon} />{\" \"}\n          </span>{\" \"}\n          <input\n            type=\"text\"\n            name=\"userName\"\n            id=\"userName\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          ></input>\n        </div>\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            <img className=\"pwdIcon\" alt=\"pwdIcon\" src={pwdIcon} />\n          </span>{\" \"}\n          <input\n            type={passwordShown ? \"text\" : \"password\"}\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyUp={(e) => {\n              if (e.key == \"Enter\") {\n                handleClick();\n              }\n            }}\n            value={password}\n          ></input>\n          <span className=\"passwordEyeIcon\">\n            <FontAwesomeIcon\n              icon={passwordShown ? faEye : faEyeSlash}\n              onClick={togglePasswordVisibility}\n            />\n          </span>\n        </div>\n        <Button className=\"btn mt-3 p-2 loginBtn\" onClick={handleClick}>\n          Login\n        </Button>\n      </form>\n\n      <div className=\"text-center fs-6 p-3\">\n        {\" \"}\n        Not a member? <a href=\"/register\">Sign Up</a>\n      </div>\n      {/* <div className=\"text-center p-2\" style={{fontSize: \"13px\"}}> <a href=\"#\">Forgot Password</a></div> */}\n    </div>\n  );\n};\n\nexport default SignInForm;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js",["47","48"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./ChatInterface.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useToken from \"./useToken\";\nimport useUser from \"./useUser\";\n\nconst ChatInterface = () => {\n  window.setTimeout(function () {\n    let element = document.getElementById(\"chatBox\");\n    element.scrollTop = element.scrollHeight;\n  });\n\n  const [topic, setTopic] = useState(\"General\");\n\n  const [messages, setMessages] = useState([]);\n\n  const [users, setUsers] = useState([]);\n\n  const { removeToken } = useToken();\n\n  const { signedInUser, signOutUser } = useUser();\n\n  let navigate = useNavigate();\n\n  const getUserInfo = (user_id) => {\n    return users.find((user) => user.id === user_id);\n  };\n\n  const selectSignedInUser = (signedInUser) => {\n    let theUserId;\n    users.find((user) => {\n      if (user.username === signedInUser) {\n        theUserId = user.id;\n      }\n    });\n    return theUserId;\n  };\n\n  async function getMessages() {\n    await axios.get(`api/messages/${topic}`).then((res) => {\n      setMessages(res.data);\n      // console.log(res.data);\n    });\n  }\n  async function getUsers() {\n    await axios.get(\"api/users\").then((res) => {\n      setUsers(res.data);\n    });\n  }\n\n  const logOut = () => {\n    axios\n      .post(\"/api/logout\", data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        removeToken();\n        signOutUser();\n        navigate(\"/\");\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(\"An error was caught!\", error);\n      });\n  };\n\n  const data = messages.map((message) => {\n    return {\n      ...message,\n      user: getUserInfo(message.userid),\n    };\n  });\n\n  let userId = selectSignedInUser(signedInUser);\n\n  const databaseSend = () => {\n    let message = document.getElementById(\"messageBox\");\n    let newText = message.value.replaceAll(\"'\", \"''\");\n\n    const data = {\n      userId: userId,\n      text: newText,\n      topic: topic,\n    };\n\n    axios\n      .post(\"/api/messages\", data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        return res;\n      })\n      .then((res) => {\n        getMessages();\n        message.value = \"\";\n      })\n      .catch((error) => {\n        console.log(data.userId);\n        console.log(data);\n        console.log(\"There was an error!\", error);\n      });\n  };\n\n  useEffect(() => {\n    getMessages();\n    getUsers();\n  }, [topic]);\n\n  const theMessages =\n    data &&\n    data.map((message, index) => {\n      return (\n        <div\n          className=\"chat-container\"\n          style={\n            message.user?.username === signedInUser\n              ? { background: \"#e45437\" }\n              : { background: \"\" }\n          }\n          key={index}\n        >\n          <div\n            className=\"card-header d-flex justify-content-between p-3\"\n            style={{ borderBottom: \"1px solid rgba(255, 255, 255, 0.3\" }}\n          >\n            <p className=\"fw-bold mb-0\">{message?.user?.username}</p>\n            <p className=\" small mb-0\">\n              <i>{message?.to_char}</i>\n            </p>\n          </div>\n          <div className=\"card-body\">\n            <p className=\"mb-0 mx-auto p-2\">{message.text}</p>\n          </div>\n        </div>\n      );\n    });\n\n  return (\n    <>\n      <div id=\"container\">\n        <div className=\"text-center mx-auto\" id=\"navbar\">\n          {topic}\n        </div>\n\n        <div className=\"userBox col-3 userText\">\n          <h6 className=\"text-center p-3 mt-2 pb-1\">Active Users</h6>\n          <p className=\"text-center font-weight-bold activeUser\">\n            {signedInUser} <br></br>\n          </p>\n          <h6 className=\"text-center p-3\">Topics</h6>\n          <Button\n            className=\"p-2 d-flex justify-content-center align-items-center mx-auto mb-4\"\n            autoFocus=\"True\"\n            id=\"General\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n            }}\n          >\n            General\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Art\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n            }}\n          >\n            Art\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Film & TV\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n            }}\n          >\n            Film & TV\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-4\"\n            id=\"Music\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n            }}\n          >\n            Music\n          </Button>\n          <Button\n            className=\"p-2 d-flex text-center mx-auto mb-5\"\n            id=\"Sports\"\n            onClick={(e) => {\n              setTopic(e.target.id);\n            }}\n          >\n            Sports\n          </Button>\n\n          <Button\n            className=\"p-3 d-flex text-center mx-auto logoutBtn\"\n            onClick={logOut}\n          >\n            Logout\n          </Button>\n        </div>\n\n        <div className=\"parent\">\n          <div className=\"discussionBox\" id=\"chatBox\">\n            <p className=\"pt-5\">The Date</p>\n            {theMessages}\n          </div>\n\n          <div className=\"flex child\">\n            <div>\n              <div className=\"input-group\">\n                <textarea\n                  id=\"messageBox\"\n                  type=\"text\"\n                  className=\"form-control messageBox\"\n                  rows=\"2\"\n                  cols=\"500\"\n                  placeholder=\"Type Your Message\"\n                  onKeyUp={(e) => {\n                    if (e.key === \"Enter\") {\n                      databaseSend();\n                    }\n                  }}\n                />\n              </div>\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"btn sendBtn\"\n              onClick={databaseSend}\n            >\n              SEND\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatInterface;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useToken.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/RegisterForm.js",["49"],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useUser.js",[],[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":11,"column":11,"nodeType":"56","messageId":"57","endLine":11,"endColumn":23},{"ruleId":"54","severity":1,"message":"58","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":27},{"ruleId":"54","severity":1,"message":"59","line":4,"column":20,"nodeType":"56","messageId":"57","endLine":4,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":94,"column":25,"nodeType":"62","messageId":"63","endLine":94,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":33,"column":23,"nodeType":"66","messageId":"67","endLine":33,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":115,"column":6,"nodeType":"70","endLine":115,"endColumn":13,"suggestions":"71"},{"ruleId":"60","severity":1,"message":"61","line":129,"column":25,"nodeType":"62","messageId":"63","endLine":129,"endColumn":27},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'signedInUser' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [getMessages, topic]",{"range":"77","text":"78"},[2653,2660],"[getMessages, topic]"]