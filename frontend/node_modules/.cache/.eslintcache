[{"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js":"1","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js":"2","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js":"3","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js":"4","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useToken.js":"5"},{"size":251,"mtime":1647495590168,"results":"6","hashOfConfig":"7"},{"size":783,"mtime":1648453166118,"results":"8","hashOfConfig":"7"},{"size":2849,"mtime":1648453362110,"results":"9","hashOfConfig":"7"},{"size":5491,"mtime":1648453715013,"results":"10","hashOfConfig":"7"},{"size":523,"mtime":1648453452025,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vy6rpv",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/index.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/App.js",["29"],[],"import \"./App.css\";\nimport ChatInterface from \"./Components/ChatInterface\";\nimport SignInForm from \"./Components/SignInForm\";\nimport useToken from \"./Components/useToken\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const { token, setToken } = useToken();\n  \n  return (\n    <div>\n      <Router>\n        {!token && token !== \"\" && token !== undefined ? (\n          <SignInForm />\n        ) : (\n          <>\n            <Routes>\n              <Route\n                exact\n                path=\"/chat\"\n                setToken={setToken}\n                element={<ChatInterface />}\n              />\n            </Routes>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/SignInForm.js",["30","31"],[],"import React from \"react\";\nimport \"./SignInForm.css\";\nimport \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport chatIcon from \"../img/chat-app-icon.png\";\nimport userIcon from \"../img/userIcon.png\";\nimport pwdIcon from \"../img/passwordIcon.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, NavItem } from \"react-bootstrap\";\n\n//Look into UseNaviate hook\n\nconst SignInForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  let navigate = useNavigate()\n\n  const handleClick = () => {\n    const data = {\n      username: username,\n      password: password,\n    };\n\n    axios\n      .post(\"/api/token\", data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then(( res ) => {\n    \n        return res \n      })\n      .then((res) => {\n        \n        localStorage.setItem(\"token\", res.data.access_token);\n        navigate('/chat')\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.log(\"There was an error!\", error);\n      });\n\n     \n  \n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"text-center pa-3\">\n        <img src={chatIcon} className=\"chatIcon\" alt=\"chat-icon\"></img>\n      </div>\n      <div className=\"text-center mt4 name\">Sign in to ChatSpace</div>\n      <form className=\"p-3 mt-3 text-center\">\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            {\" \"}\n            <img className=\"userIcon\" alt=\"userIcon\" src={userIcon} />{\" \"}\n          </span>{\" \"}\n          <input\n            type=\"text\"\n            name=\"userName\"\n            id=\"userName\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          ></input>\n        </div>\n        <div className=\"form-field d-flex align-items-center\">\n          {\" \"}\n          <span>\n            <img className=\"pwdIcon\" alt=\"pwdIcon\" src={pwdIcon} />\n          </span>{\" \"}\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          ></input>\n        </div>\n        <Button className=\"btn mt-3 p-2 loginBtn\" onClick={handleClick}>\n          Login\n        </Button>\n      </form>\n      <div className=\"text-center fs-6 p-3\">\n        {\" \"}\n        Not a member? <a href=\"#\">Sign Up</a>\n      </div>\n      {/* <div className=\"text-center p-2\" style={{fontSize: \"13px\"}}> <a href=\"#\">Forgot Password</a></div> */}\n      {/* <div className=\"text-center fs-6\"> Or <a href=\"#\">Continue as Guest</a></div> */}\n    </div>\n  );\n};\n\nexport default SignInForm;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/ChatInterface.js",["32"],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/frontend/src/Components/useToken.js",[],[],{"ruleId":"33","severity":1,"message":"34","line":6,"column":10,"nodeType":"35","messageId":"36","endLine":6,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":10,"column":18,"nodeType":"35","messageId":"36","endLine":10,"endColumn":25},{"ruleId":"38","severity":1,"message":"39","line":93,"column":23,"nodeType":"40","endLine":93,"endColumn":35},{"ruleId":"41","severity":1,"message":"42","line":88,"column":5,"nodeType":"43","endLine":88,"endColumn":12,"suggestions":"44"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["45"],{"desc":"46","fix":"47"},"Update the dependencies array to be: [getMessages, topic]",{"range":"48","text":"49"},[1817,1824],"[getMessages, topic]"]