[{"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/index.js":"1","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/reportWebVitals.js":"2","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/App.js":"3","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/Components/ChatInterface.js":"4","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/Components/SignInForm.js":"5"},{"size":251,"mtime":1647495590168,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1647318906365,"results":"8","hashOfConfig":"7"},{"size":483,"mtime":1647582314768,"results":"9","hashOfConfig":"7"},{"size":3132,"mtime":1647592420678,"results":"10","hashOfConfig":"7"},{"size":1569,"mtime":1647585810037,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dtofu0",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/index.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/reportWebVitals.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/App.js",[],[],"/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/Components/ChatInterface.js",["30","31","32","33"],[],"import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./ChatInterface.css\";\nimport { Link } from \"react-router-dom\";\n\nconst send = () => {\n  let message = document.getElementById(\"messageBox\");\n  let chatBox = document.getElementById(\"chatBox\");\n  // chatBox.innerHTML = message.value;\n  theMessage = message.value;\n  console.log(theMessage);\n  message.value = \"\";\n};\n\nlet name = \"Emily Thorne\";\nlet time = \"9.30pm\";\nlet date = \"3/18/22\";\nlet theMessage =\n  \"Some say that our lives are defined by the sum of our choices.\\\n   But it isn’t really our choices that distinguish who we are. \\\n   It’s our commitment to them.\";\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  e.target.reset();\n};\n\nconst ChatInterface = () => {\n  return (\n    <>\n      <div id=\"container\">\n        <div className=\"userBox col-3 userText\">\n          <p className=\"text-center p-3\">Active Users</p>\n          <p className=\"text-center \">Topics</p>\n          <Button\n            className=\"p-2 d-flex justify-content-center align-items-center mx-auto mb-4 active\"\n            active\n          >\n            General\n          </Button>\n          <Button className=\"p-2 d-flex text-center mx-auto mb-4\">Art</Button>\n          <Button className=\"p-2 d-flex text-center mx-auto mb-4\">\n            Sports\n          </Button>\n          <Button className=\"p-2 d-flex text-center mx-auto mb-5\">Music</Button>\n\n          <Button\n            className=\"p-3 d-flex text-center mx-auto logoutBtn\"\n            as={Link}\n            to=\"/\"\n          >\n            Logout\n          </Button>\n        </div>\n\n        <div className=\"parent\">\n          <div className=\"discussionBox p-5\" id=\"chatBox\"></div>\n\n          {/* the message container  */}\n\n          <div className=\" chat-container\">\n            <div\n              className=\"card-header d-flex justify-content-between p-3\"\n              style={{ borderBottom: \"1px solid rgba(255, 255, 255, 0.3\" }}\n            >\n              <p className=\"fw-bold mb-0\">{name}</p>\n              <p className=\" small mb-0\">\n                <i>{time}</i>\n              </p>\n            </div>\n            <div className=\"card-body\">\n              <p className=\"mb-0 mx-auto p-2\">{theMessage}</p>\n            </div>\n          </div>\n\n          <div className=\"flex child\">\n            <div>\n              <div className=\"input-group\">\n                <textarea\n                  id=\"messageBox\"\n                  type=\"text\"\n                  className=\"form-control messageBox\"\n                  rows=\"2\"\n                  cols=\"500\"\n                  placeholder=\"Type Your Message\"\n                  onKeyUp={(e) => {\n                    if (e.key === \"Enter\") {\n                      send();\n                      e.target.value = \"\";\n                    }\n                  }}\n                  onSubmit={handleSubmit}\n                />\n              </div>\n            </div>\n            <Button type=\"submit\" className=\"btn\" onClick={send}>\n              SEND\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatInterface;\n","/Users/crystalword/Documents/Coding/Portfolio Projects/chat_app/src/Components/SignInForm.js",["34"],[],"import React from \"react\";\nimport \"./SignInForm.css\";\nimport \"react-bootstrap\";\nimport chatIcon from \"../img/chat-app-icon.png\";\nimport userIcon from '../img/userIcon.png'\nimport pwdIcon from '../img/passwordIcon.png'\nimport {Link} from \"react-router-dom\"\nimport { Button } from \"react-bootstrap\";\n\nconst SignInForm = () => {\n  return (\n    \n      <div className=\"wrapper\">\n     \n              <div className=\"text-center pa-3\"><img src={chatIcon} className=\"chatIcon\" alt=\"chat-icon\"></img></div>\n              <div className=\"text-center mt4 name\">Sign in to Chat</div>\n             <form className=\"p-3 mt-3 text-center\">\n               <div className=\"form-field d-flex align-items-center\"> <span> <img className=\"userIcon\" alt=\"userIcon\" src={userIcon}/> </span> <input type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"Username\"></input></div>\n               <div className=\"form-field d-flex align-items-center\"> <span><img className=\"pwdIcon\" alt=\"pwdIcon\" src={pwdIcon}/></span> <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"></input></div>\n               <Button className=\"btn mt-3 p-2\" as={Link} to=\"chat\">Login</Button>\n                </form>\n                <div className=\"text-center fs-6 p-3\"> Not a member? <a href=\"#\">Sign Up</a></div>\n                {/* <div className=\"text-center p-2\" style={{fontSize: \"13px\"}}> <a href=\"#\">Forgot Password</a></div> */}\n                {/* <div className=\"text-center fs-6\"> Or <a href=\"#\">Continue as Guest</a></div> */}\n           </div>\n  );\n};\n\nexport default SignInForm;\n",["35","36"],{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":8,"column":7,"nodeType":"39","messageId":"40","endLine":8,"endColumn":14},{"ruleId":"37","severity":1,"message":"42","line":17,"column":5,"nodeType":"39","messageId":"40","endLine":17,"endColumn":9},{"ruleId":"43","severity":1,"message":"44","line":19,"column":3,"nodeType":"45","messageId":"46","endLine":21,"endColumn":33},{"ruleId":"47","severity":1,"message":"48","line":22,"column":70,"nodeType":"49","endLine":22,"endColumn":82},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'chatBox' is assigned a value but never used.","'date' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-global-assign","no-unsafe-negation"]